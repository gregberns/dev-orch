#cloud-config
package_update: true
package_upgrade: true

# System packages
packages:
  # Python 3.12 and development tools
  - python3.12
  - python3.12-venv
  - python3-pip
  - python3-dev
  - build-essential
  - curl
  - wget
  - git
  - vim
  - htop
  - tree
  - tmux
  - zsh

  # Container runtime
  - podman
  - podman-compose
  - containers-podman

  # Development tools
  - make
  - cmake
  - gcc
  - g++
  - clang
  - llvm
  - gdb
  - valgrind

  # Networking tools
  - net-tools
  - iproute2
  - dnsutils
  - telnet
  - nmap

  # System monitoring
  - sysstat
  - iotop
  - iftop

  # Text processing
  - jq
  - yq
  - ripgrep
  - fd-find

# User configuration
users:
  - name: ubuntu
    groups: sudo, docker, systemd-journal
    shell: /bin/bash
    sudo: ['ALL=(ALL) NOPASSWD:ALL']
    # ssh-authorized-keys:
    #   - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC...
      
# System configuration
write_files:
  # Python configuration
  - path: /home/ubuntu/.python-version
    content: "3.12.10"
    owner: ubuntu:ubuntu

  # Git configuration
  - path: /home/ubuntu/.gitconfig
    content: |
      [user]
          name = Python Developer
          email = developer@example.com
      [core]
          editor = vim
          pager = less
          autocrlf = input
      [color]
          ui = auto
      [push]
          default = current
      [pull]
          rebase = true
      [alias]
          st = status
          co = checkout
          br = branch
          ci = commit
          pu = push
          pl = pull
          df = diff
          lg = log --oneline --graph --decorate --all
          lol = log --oneline
          lola = log --oneline --graph --decorate --all
    owner: ubuntu:ubuntu

  # Podman configuration
  - path: /home/ubuntu/.config/containers/containers.conf
    content: |
      [containers]
      env = ["TERM=xterm-256color"]

      [engine]
      runtime = "crun"
      events_logger = "journald"
      cgroup_manager = "cgroupfs"
      [engine.runtimes]
      [engine.runtimes.crun]
      command = ["crun"]
    owner: ubuntu:ubuntu
    create_dirs: true

# Runtime commands
runcmd:
  # Setup Python environment with UV
  - curl -LsSf https://astral.sh/uv/install.sh | sh
  - export PATH="$HOME/.cargo/bin:$PATH"

  # Enable podman socket for rootless operation
  - systemctl --user enable podman.socket --now
  - loginctl enable-linger ubuntu

  # Create workspace directory
  - mkdir -p /home/ubuntu/workspace
  - chown ubuntu:ubuntu /home/ubuntu/workspace

  # Setup development directories
  - mkdir -p /home/ubuntu/dev
  - mkdir -p /home/ubuntu/projects
  - mkdir -p /home/ubuntu/src
  - chown -R ubuntu:ubuntu /home/ubuntu/{dev,projects,src}

  # Initialize Python project with UV
  - su - ubuntu -c "uv init /home/ubuntu/workspace --app"

  # Install system Python packages
  - su - ubuntu -c "uv add --system pip wheel setuptools"

  # Install common development tools
  - su - ubuntu -c "uv add --system black isort flake8 mypy pytest pytest-cov bandit safety pre-commit"

  # Install Rust tools
  - su - ubuntu -c "cargo install cargo-watch cargo-audit cargo-outdated"

  # Setup bash completion
  - curl -L https://raw.githubusercontent.com/docker/compose/1.29.6/contrib/completion/bash/docker-compose > /etc/bash_completion.d/docker-compose
  - curl -L https://raw.githubusercontent.com/scop/bash-completion/master/README.md > /etc/bash_completion.d/README.md

  # Update system packages
  - apt update && apt upgrade -y && apt clean

  # Remove unnecessary packages
  - apt autoremove -y

  # Clean up apt cache
  - rm -rf /var/lib/apt/lists/*

# Final message
final_message: "Golden image setup complete! UV, Podman, and development tools are ready."
